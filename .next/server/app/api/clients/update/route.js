(()=>{var e={};e.id=246,e.ids=[246],e.modules={10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},94678:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>g,routeModule:()=>v,serverHooks:()=>x,workAsyncStorage:()=>m,workUnitAsyncStorage:()=>j});var n={};r.r(n),r.d(n,{PUT:()=>c});var a=r(42706),o=r(28203),i=r(45994),s=r(39187),l=r(71618),u=r(27727),p=r(65665);let d=u.Ik({id:u.Yj().min(1,"Client ID is required"),firstName:u.Yj().min(1,"First name is required"),lastName:u.Yj().min(1,"Last name is required"),email:u.Yj().email("Invalid email address"),phone:u.Yj().optional().nullable(),eventDate:u.Yj().optional().nullable(),eventType:u.Yj().optional().nullable(),eventLocation:u.Yj().optional().nullable(),eventStartTime:u.Yj().optional().nullable(),eventDuration:u.Yj().optional().nullable(),eventPackage:u.Yj().optional().nullable(),notes:u.Yj().optional().nullable()});async function c(e){try{let t=await e.json();console.log("Client update request body:",t);let r=d.parse(t);console.log("Validated data:",r);let n=await l.z.client.update({where:{id:r.id},data:{firstName:r.firstName,lastName:r.lastName,email:r.email,phone:r.phone,eventDate:r.eventDate?new Date(r.eventDate):null,eventType:r.eventType,eventLocation:r.eventLocation,eventStartTime:r.eventStartTime,eventDuration:r.eventDuration,eventPackage:r.eventPackage,notes:r.notes}});return console.log("Updated client:",n),s.NextResponse.json(n)}catch(e){if(console.error("Client update error details:",e),e instanceof p.G)return console.error("Zod validation errors:",e.errors),s.NextResponse.json({error:e.errors},{status:400});return console.error("Error updating client:",e),s.NextResponse.json({error:"Failed to update client"},{status:500})}}let v=new a.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/clients/update/route",pathname:"/api/clients/update",filename:"route",bundlePath:"app/api/clients/update/route"},resolvedPagePath:"C:\\Users\\denni\\agreements\\app\\api\\clients\\update\\route.ts",nextConfigOutput:"",userland:n}),{workAsyncStorage:m,workUnitAsyncStorage:j,serverHooks:x}=v;function g(){return(0,i.patchFetch)({workAsyncStorage:m,workUnitAsyncStorage:j})}},96487:()=>{},78335:()=>{},71618:(e,t,r)=>{"use strict";r.d(t,{z:()=>a});let n=require("@prisma/client"),a=global.prisma||new n.PrismaClient({log:["error","warn"]})}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[638,452,727],()=>r(94678));module.exports=n})();