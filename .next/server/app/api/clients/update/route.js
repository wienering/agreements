(()=>{var e={};e.id=246,e.ids=[246],e.modules={10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},94678:(e,t,n)=>{"use strict";n.r(t),n.d(t,{patchFetch:()=>g,routeModule:()=>v,serverHooks:()=>x,workAsyncStorage:()=>m,workUnitAsyncStorage:()=>j});var r={};n.r(r),n.d(r,{PUT:()=>c});var a=n(42706),i=n(28203),o=n(45994),s=n(39187),l=n(71618),u=n(27727),p=n(65665);let d=u.Ik({id:u.Yj().min(1,"Client ID is required"),firstName:u.Yj().min(1,"First name is required"),lastName:u.Yj().min(1,"Last name is required"),email:u.Yj().email("Invalid email address"),phone:u.Yj().optional().nullable(),eventDate:u.Yj().optional().nullable(),eventType:u.Yj().optional().nullable(),eventLocation:u.Yj().optional().nullable(),eventStartTime:u.Yj().optional().nullable(),eventDuration:u.Yj().optional().nullable(),eventPackage:u.Yj().optional().nullable(),notes:u.Yj().optional().nullable()});async function c(e){try{let t=await e.json();console.log("Client update request body:",t);let n=d.parse(t);console.log("Validated data:",n);let r=await l.z.client.update({where:{id:n.id},data:{firstName:n.firstName,lastName:n.lastName,email:n.email,phone:n.phone,eventDate:n.eventDate?new Date(n.eventDate):null,notes:n.notes}});try{await l.z.$executeRaw`
        UPDATE "Client" 
        SET "eventType" = ${n.eventType||null},
            "eventLocation" = ${n.eventLocation||null},
            "eventStartTime" = ${n.eventStartTime||null},
            "eventDuration" = ${n.eventDuration||null},
            "eventPackage" = ${n.eventPackage||null}
        WHERE "id" = ${n.id}
      `;let e=await l.z.client.findUnique({where:{id:n.id}});return console.log("Updated client with event fields:",e),s.NextResponse.json(e)}catch(e){return console.log("Event fields not available in database, returning basic client"),s.NextResponse.json(r)}}catch(e){if(console.error("Client update error details:",e),e instanceof p.G)return console.error("Zod validation errors:",e.errors),s.NextResponse.json({error:e.errors},{status:400});return console.error("Error updating client:",e),s.NextResponse.json({error:"Failed to update client"},{status:500})}}let v=new a.AppRouteRouteModule({definition:{kind:i.RouteKind.APP_ROUTE,page:"/api/clients/update/route",pathname:"/api/clients/update",filename:"route",bundlePath:"app/api/clients/update/route"},resolvedPagePath:"C:\\Users\\denni\\agreements\\app\\api\\clients\\update\\route.ts",nextConfigOutput:"",userland:r}),{workAsyncStorage:m,workUnitAsyncStorage:j,serverHooks:x}=v;function g(){return(0,o.patchFetch)({workAsyncStorage:m,workUnitAsyncStorage:j})}},96487:()=>{},78335:()=>{},71618:(e,t,n)=>{"use strict";n.d(t,{z:()=>a});let r=require("@prisma/client"),a=global.prisma||new r.PrismaClient({log:["error","warn"]})}};var t=require("../../../../webpack-runtime.js");t.C(e);var n=e=>t(t.s=e),r=t.X(0,[638,452,727],()=>n(94678));module.exports=r})();