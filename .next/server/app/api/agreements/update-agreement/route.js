(()=>{var e={};e.id=464,e.ids=[464],e.modules={10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},58255:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>w,routeModule:()=>c,serverHooks:()=>f,workAsyncStorage:()=>g,workUnitAsyncStorage:()=>x});var n={};r.r(n),r.d(n,{PUT:()=>m});var s=r(42706),o=r(28203),a=r(45994),i=r(39187),u=r(71618),d=r(27727),p=r(65665);let l=d.Ik({id:d.Yj().min(1,"Agreement ID is required"),htmlContent:d.Yj().min(1,"HTML content is required")});async function m(e){try{let t=await e.json();console.log("Agreement update request body:",t);let r=l.parse(t);console.log("Validated data:",r);let n=r.id,s=await u.z.agreement.findUnique({where:{id:n},select:{templateId:!0}});if(!s)return console.error("Agreement not found:",n),i.NextResponse.json({error:"Agreement not found"},{status:404});console.log("Found agreement, template ID:",s.templateId),await u.z.template.update({where:{id:s.templateId},data:{htmlContent:r.htmlContent,version:{increment:1}}}),console.log("Template updated successfully");let o=await u.z.agreement.findUnique({where:{id:n},include:{client:!0,template:!0}});if(!o)return console.error("Agreement not found after update:",n),i.NextResponse.json({error:"Agreement not found after update"},{status:404});return console.log("Agreement updated successfully:",o.id),i.NextResponse.json(o)}catch(e){if(console.error("Agreement update error details:",e),e instanceof p.G)return console.error("Zod validation errors:",e.errors),i.NextResponse.json({error:e.errors},{status:400});return console.error("Error updating agreement:",e),i.NextResponse.json({error:"Failed to update agreement"},{status:500})}}let c=new s.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/agreements/update-agreement/route",pathname:"/api/agreements/update-agreement",filename:"route",bundlePath:"app/api/agreements/update-agreement/route"},resolvedPagePath:"C:\\Users\\denni\\agreements\\app\\api\\agreements\\update-agreement\\route.ts",nextConfigOutput:"",userland:n}),{workAsyncStorage:g,workUnitAsyncStorage:x,serverHooks:f}=c;function w(){return(0,a.patchFetch)({workAsyncStorage:g,workUnitAsyncStorage:x})}},96487:()=>{},78335:()=>{},71618:(e,t,r)=>{"use strict";r.d(t,{z:()=>s});let n=require("@prisma/client"),s=global.prisma||new n.PrismaClient({log:["error","warn"]})}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[638,452,727],()=>r(58255));module.exports=n})();