(()=>{var e={};e.id=423,e.ids=[423],e.modules={10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},15762:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>g,routeModule:()=>d,serverHooks:()=>m,workAsyncStorage:()=>c,workUnitAsyncStorage:()=>l});var s={};t.r(s),t.d(s,{GET:()=>u});var n=t(42706),a=t(28203),o=t(45994),i=t(39187),p=t(71618);async function u(){try{let e=await p.z.agreement.findMany({where:{status:"COMPLETED",archived:!1},include:{client:!0,template:!0},orderBy:{updatedAt:"desc"}});return i.NextResponse.json(e)}catch(e){return console.error("Error fetching completed agreements:",e),i.NextResponse.json({error:"Failed to fetch completed agreements"},{status:500})}}let d=new n.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/agreements/completed/route",pathname:"/api/agreements/completed",filename:"route",bundlePath:"app/api/agreements/completed/route"},resolvedPagePath:"C:\\Users\\denni\\agreements\\app\\api\\agreements\\completed\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:c,workUnitAsyncStorage:l,serverHooks:m}=d;function g(){return(0,o.patchFetch)({workAsyncStorage:c,workUnitAsyncStorage:l})}},96487:()=>{},78335:()=>{},71618:(e,r,t)=>{"use strict";t.d(r,{z:()=>n});let s=require("@prisma/client"),n=global.prisma||new s.PrismaClient({log:["error","warn"]})}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[638,452],()=>t(15762));module.exports=s})();